row(13).
column(14).

%istanziazioni di ostacoli in acqua per eliminare la direzione
waterObstacle(X,Y) :- obstacle(X,Y,_), X >= 1, X <= 5.

%guess sui salti
jumpUp(X-1,Y) | jumpDown(X+1,Y) | jumpLeft(X,Y-1) | jumpRight(X,Y+1) :- player(X,Y).

%generalizzazione sul salto
jump(X,Y) :- jumpUp(X,Y).
jump(X,Y) :- jumpDown(X,Y).
jump(X,Y) :- jumpLeft(X,Y).
jump(X,Y) :- jumpRight(X,Y).

%vincoli bordi
:-jumpUp(X,_), X < 0.
:-jumpDown(X,_), row(R), X > R.
:-jumpLeft(_,Y), Y < 0.
:-jumpRight(_,Y), column(C), Y > C. 

%vincoli auto
:-jump(X,Y), obstacle(X,Y,_), X >= 7, X <= 11.

%vincoli acqua
:-jump(X,Y), not waterObstacle(X,Y), X >= 1, X <= 5.

%gestire distanza player-bordi???

%distanza player-goal
%alternativa sulla distanza per i jump
distanzaJtoG(Z) :- goal(X1,Y1), jump(X2,Y2), Y2>=Y1, Z = (X2-X1)+(Y2-Y1).
distanzaJtoG(Z) :- goal(X1,Y1), jump(X2,Y2), Y2<Y1, Z = (X2-X1)+(Y1-Y2).
distanzaPtoG(Z) :- goal(X1,Y1), player(X2,Y2), Y2>=Y1, Z = (X2-X1)+(Y2-Y1).
distanzaPtoG(Z) :- goal(X1,Y1), player(X2,Y2), Y2<Y1, Z = (X2-X1)+(Y1-Y2).
:-#sum{D1:distanzaJtoG(D1)}=Z1, #sum{D1:distanzaPtoG(D1)}=Z2, Z1 > Z2.
%:~#min{Z:distanzaJtoG(Z)} = H. [H@1,H]
:~distanzaJtoG(Z). [Z@1,Z]

:~player(X,Y), obstacle(X,Y,0), X >= 1, X <= 5. [Y@1,Y]
:~player(X,Y), obstacle(X,Y,1), column(C), X >= 1, X <= 5. [C-1-Y@1,Y,C]

%distanzaBtoJ(Z) :- player(X,Y), obstacle(X,Y,0), column(C), Z = (C - 1 - (C - 1 - Y)), X >= 1, X <=5.
%distanzaBtoJ(Z) :- player(X,Y), obstacle(X,Y,1), column(C), Z = (C - 1 - Y), X >= 1, X <=5.
%:~distanzaBtoJ(B). [1@B,B]
:- player(1,Y), not jumpUp(0,Y).

%Distanza player-macchina
%nearestLtoRob(X,Y) :- jump(X,Y)
%nearestRtoLob(X,Y) :- jump(X,Y)
:-jump(X,Y1), obstacle(X,Y2,0), Y1>Y2, Y1-1=Y2, X >= 7, X <= 11.
:-jump(X,Y1), obstacle(X,Y2,1), Y1<Y2, Y1+1=Y2, X >= 7, X <= 11.

%zone proibite
:-jumpUp(0,Y1), goal(0,Y2), Y1 = Y2.

%fatti da aggiungere tramite embasp
%goal(0,Y). i goal si trovano tutti sulla riga 0 e colonna Y
%obstacle(X,Y,Direction), direction in 0-1.
%player(X,Y). riga, colonna